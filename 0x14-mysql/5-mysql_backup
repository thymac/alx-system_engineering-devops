#!/bin/bash
i# script that generates a MySQL dump and creates a compressed archive out of it
# The MySQL dump must contain all your MySQL databases
# The MySQL dump must be named backup.sql
# The MySQL dump file has to be compressed to a tar.gz archive
# This archive must have the following name format: day-month-year.tar.gz
# The user to connect to the MySQL database must be root
# The Bash script accepts one argument that is the password used to connect to the MySQL database

# Get the current date
current_date=$(date +"%d-%m-%Y")

# MySQL dump file name
dump_file="backup.sql"

# MySQL root password
password="$1"

# Check if the password argument is provided
if [ -z "$password" ]; then
    echo "MySQL root password is missing."
    echo "Usage: ./mysql_backup.sh <mysql_root_password>"
    exit 1
fi

# Generate the MySQL dump
mysqldump -u root -p"$password" --all-databases > "$dump_file"

# Check if the dump was created successfully
if [ $? -ne 0 ]; then
    echo "Failed to create the MySQL dump."
    exit 1
fi

# Compress the dump file
tar -czvf "$current_date.tar.gz" "$dump_file"

# Check if the compression was successful
if [ $? -ne 0 ]; then
    echo "Failed to compress the MySQL dump."
    exit 1
fi

# Remove the dump file
rm "$dump_file"

# Print success message
echo "MySQL backup created successfully: $current_date.tar.gz"

